// Import standard lib as std
// import "std", std;

// Import other file 
import "imported.gvs", imported;

const HELLO, "Hello, World!";

array myArray, 0, 1, 2, 3;

// TODO: Not implemented yet
//struct MyStruct;
//    var structMember, 0;
//end;

// namespace with member and method
namespace Program;
    const ESCAPE_TEST, "\"\'\`//";
    const INT_TEST, 84592;
    const INT_TEST2, -84592;
    const FLOAT_TEST, 84592.05;

    var changeMe, "";

    namespace Nested;
        var nestedMember, "lol";
    end;

    func MyMain, arg0, arg1, arg2;
        // Print is a builtin function
        call Print, arg1;
        call Print, changeMe;
        call Print, Nested.nestedMember;
        return "RESULT FROM MyMain";
    end;
end;

func Fibonacci, t1, t2, next;
    if Lesser, next, t1; // Only happens at integer overflow
        return;
    endif;

    call Print, next;
    set t1, t2;
    set t2, next;
    fetch newNext, AddI, t1, t2;

    call Fibonacci, t1, t2, newNext;
end;

// Main function
func Main;
    fetch item, At, myArray, 2;
    call Print, item;

    fetch chr, At, HELLO, 7;
    fetch chrAsStr, StrFromChar, chr;
    call Print, chr, chrAsStr;

    const TEST_VAR, 0;
    set Program.changeMe, "NEW VALUE";
    set Program.Nested.nestedMember, "lmao";

    call Print, "Hello,", "World!", -845;

    var myInt, 50;
    var myFlt, 40.5;

    // retVal refers to the return value of the latest function call
    // defaults to null if no return statement in function
    fetch sum, Add, myInt, myFlt, 25; // var sum = Add(myInt, myFlt, 25)
    fetch result, Mul, sum, 2.0;      // var result = 115.5 * 2.0
    call Print, result;

    // set HELLO, "causes error since is const";
    call Program.MyMain, 0, HELLO, 0;
    call Print, retVal;
    call imported.FuncFromOtherFile;
    call Print, Program.Nested.nestedMember;

    call Fibonacci, 0, 1, 1;

    return;

    call Print, "won\'t happen";
end;